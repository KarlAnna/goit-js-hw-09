{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBAI3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAZMN,SAASC,cAAc,QAgB/Ba,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAQE,IAPJ,IAAIC,EAAQlB,EAAWmB,MACjBC,EAAShB,EAAYe,MACvBE,EAAOlB,EAAUgB,MAEjBG,EAAO,EACPC,EAAIC,OAAON,GACXO,EAAID,OAAOH,GACFK,EAAIH,GAAKG,GAAKD,EAAG,CACxB,GAAIH,GAAQF,EACV,OAGFf,EADAiB,GAAQ,EACYI,GACjBC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBT,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBT,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('input[name=delay]')\nconst stepInput = document.querySelector('input[name=step]')\nconst amountInput = document.querySelector('input[name=amount]')\nconst form = document.querySelector('form')\nlet intervalId = null\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  })\n}\n\nform.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault()\n  let delay = delayInput.value\n  const amount = amountInput.value\n  let step = stepInput.value\n\n  let stop = 0\n  let d = Number(delay)\n  let s = Number(step)\n      for (let i = d; ; i += s) {\n        if (stop == amount) {\n          return\n        }\n        stop += 1\n        createPromise(stop, i)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n          });\n      }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","value","amount","step","stop","d","Number","s","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.64536d41.js.map"}